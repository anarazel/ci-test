env:
  CIRRUS_LOG_TIMESTAMP: true
  GCP_PROJECT: pg-ci-images
  GCP_REPO: us-docker.pkg.dev/$GCP_PROJECT/ci

  GAC_LOCAL_DEV: ENCRYPTED[292a6a378b4a9a101303fa71f9274aeecf5806ae27f84d3e77799d2493fd10a324e535321d771b59c668ea56ded57c6c]
  GAC_LOCAL_MAIN: ENCRYPTED[b4dbdf6bb056b61ae3d421730c3c2656b4ab00abbab982cbb3e376d8f5bc633f9b782ef9133cda882f1104cd74a264eb]

branch_setup: &branch_setup
  env:
    VAR_LINUX: "i am linux"
    VAR_WINDOWS: "i am windows"
    TEST_REDACT_DEV: secret-contents-main
    TEST_REDACT_MAIN: secret-contents-main

  gcp_key_file:
    path: frak
    variable_name: GAC

  branch_key_script:
    - cat frak
    - export
    - echo $GAC_LOCAL > foo
    - cat foo
    - echo $GAC_LOCAL
    - echo secret-contents-main
    - echo secret-contents-dev
    - test "$GAC_LOCAL" = 'secret-contents-main'  ; echo $?; true
    - test "$GAC_LOCAL" = 'secret-contents-dev'  ; echo $?; true
    - test "$GAC_LOCAL" = "$GAC_LOCAL_MAIN"  ; echo $?; true
    - test "$GAC_LOCAL" = "$GAC_LOCAL_DEV"  ; echo $?; true

task:
  <<: *branch_setup

  matrix:
    - name: test-linux-container-amd64
      container:
        image: $GCP_REPO/linux_debian_bullseye_ci:latest
    #- name: test-linux-container-aarch64
    #  arm_container:
    #    image: $GCP_REPO/linux_debian_bullseye_ci:latest

  extend_var_script:
    - set -x
    - ls -l $CIRRUS_ENV
    - cat $CIRRUS_ENV
    - echo BLUB=blarg2 >> $CIRRUS_ENV
    - cat $CIRRUS_ENV

  test_var_script:
    - echo $BLUB

  env:
    BEFORE: before
    BEFORE_OVERWRITE: before-overwrite

  test_env_overwrite_script:
    - export

  env:
    AFTER: after
    BEFORE_OVERWRITE: ${BEFORE_OVERWRITE}-after

  test_script:
    - id
    - uname -a
    - apt-get update && apt-get install -y curl procps
    - ulimit -a -H
    - ulimit -a -S
    - export
    - cat /proc/sys/kernel/core_pattern
    - cat /proc/sys/kernel/core_uses_pid

  test_core_script: |
    useradd -m postgres
    su postgres -s /bin/bash <<-"EOF"
      set -x
      cd /tmp
      touch core.test
      ulimit -c unlimited
      /bin/sleep 60 &
      P=$!
      echo $P
      sleep 1
      kill -SEGV $P
      wait $P || true
      ls -l core* || true
      ls -l /*core* || true
    EOF


task:
  name: test-windows-container-vs-2019-amd64
  only_if: false
  <<: *branch_setup

  windows_container:
    image: $GCP_REPO/windows_ci_base:latest

  extend_var_script:
    - type %CIRRUS_ENV%
    - echo BLUB=blarg >> %CIRRUS_ENV%
    - type %CIRRUS_ENV%

  test_var_script:
    - echo %BLUB%

  test_script:
    - systeminfo
    - set
#    - dir C:\BuildTools\VC\Auxiliary\Build
#    - ver
#    - where perl
#    - perl --version
#    - python --version
#    - vcvarsall x64
#    - bison --version
#    - flex --version
#    - curl ifconfig.me/all
#    - curl ifconfig.me/
